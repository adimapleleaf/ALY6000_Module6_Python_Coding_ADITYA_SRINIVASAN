import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
from IPython.display import Image
from IPython.core.display import HTML 


df = pd.read_csv("df_new.csv")

# Check for duplicate data

dups = df.duplicated()
print('Number of duplicate rows = %d' % (dups.sum()))

df[dups]


df.head()

df.info()

df.Genre.unique()

#Yearly data on movies/shows from Amazon Prime Video and Netflix
plt.figure(figsize=(10,8))
fig = sns.distplot(df['Year'],color = 'limegreen')
fig.set_xlabel("Year",size=12)
fig.set_ylabel("Count of Movies or Shows",size=12)
plt.title('Distribution of Movies or TV shows in each Year',size = 15)
plt.show()



#Distribution of Movies or TV shows as per IMDb Rating
plt.figure(figsize=(10,8))
fig = sns.distplot(df['IMDb'],color = '#9400d3')
fig.set_xlabel("IMDb",size=12)
fig.set_ylabel("Frequency of Movies or Shows",size=12)
plt.title('Distribution of Movies or TV shows as per IMDb Rating',size = 15)
plt.show()



#Distribution of Movies or TV shows as per Rotten.Tomatoes Rating
plt.figure(figsize=(10,8))
fig = sns.distplot(df['Rotten.Tomatoes'],color = '#ff9966')
fig.set_xlabel("Rotten.Tomatoes",size=12)
fig.set_ylabel("Frequency of Movies or Shows",size=12)
plt.title('Distribution of Movies or TV shows as per Rotten.Tomatoes Rating',size = 15)
plt.show()



#Distribution of Movies or TV shows as per Combined_Average_Rating
plt.figure(figsize=(10,8))
fig = sns.distplot(df['Combined_Average_Rating'],color = '#c7c96c')
fig.set_xlabel("Combined_Average_Rating",size=12)
fig.set_ylabel("Frequency of Movies or Shows",size=12)
plt.title('Distribution of Movies or TV shows as per Combined_Average_Rating',size = 15)
plt.show()



from wordcloud import WordCloud
plt.subplots(figsize=(25,15))
wordcloud = WordCloud(
                          background_color='white',
                          width=1920,
                          height=1080
                         ).generate(" ".join(df.Title))
plt.imshow(wordcloud)
plt.axis('off')
plt.savefig('Title.png')
plt.show()


#Correlation Heatmap
plt.figure(figsize=(12,7))
sns.heatmap(df.corr(), annot=True, fmt='.2f', cmap='Blues')
plt.show()


